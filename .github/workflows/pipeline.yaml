name: Pipeline

on:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'feature**'
  delete:
    branches:
      - 'feature**'

env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SAM_TEMPLATE: template.yaml
  TESTING_STACK_NAME: golang-app-dev-stack
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::012821307542:role/aws-sam-cli-managed-develop-p-PipelineExecutionRole-7xro0GasKJE1
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::012821307542:role/aws-sam-cli-managed-devel-CloudFormationExecutionRo-VHLTYt17whFe
  TESTING_ARTIFACTS_BUCKET: aws-sam-cli-managed-develop-pipeli-artifactsbucket-e54ejcyohj9e
  TESTING_REGION: us-east-1
  PROD_STACK_NAME: golang-app-prd-stack
  PROD_PIPELINE_EXECUTION_ROLE: arn:aws:iam::012821307542:role/aws-sam-cli-managed-productio-PipelineExecutionRole-HnReJdD1WrG6
  PROD_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::012821307542:role/aws-sam-cli-managed-produ-CloudFormationExecutionRo-O6tSWux3VVbJ
  PROD_ARTIFACTS_BUCKET: aws-sam-cli-managed-production-pip-artifactsbucket-7dh0txwkgxvo
  PROD_REGION: us-east-1

jobs:
  log-events:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Print Event Information
        env:
          EVENT_NAME: ${{ github.event_name }}
          PR_BASE_REF: ${{ github.ref }}
          HEAD_REF: ${{ github.head_ref }}
        run: |
          echo "GitHub Event Name: $EVENT_NAME"
          echo "Pull Request Base Ref: $PR_BASE_REF"
          echo "Head Ref: $HEAD_REF"

  test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # trigger the tests here

  delete-feature:
    if: startsWith(github.event.ref, 'feature') && github.event_name == 'delete'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: ðŸ¤¡ *Delete feature branch stack* ðŸ¤¬ðŸ¤¬
        env:
          FEATURE_BRANCH_NAME: ${{ github.ref }}
        run: |
          stack_name=$(echo ${FEATURE_BRANCH_NAME##*/} | tr -cd '[a-zA-Z0-9-]')
          echo "Nome da stack: $stack_name"
          sam delete \
            --stack-name $stack_name \
            --region ${TESTING_REGION} \
            --no-prompts

  build-and-deploy-feature:
    if: startsWith(github.ref, 'refs/heads/feature')
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Go binary
        run: |
          GOOS=linux GOARCH=amd64 go build -o bootstrap main.go
      - uses: aws-actions/setup-sam@v2
      - run: sam build --template ${SAM_TEMPLATE} --use-container

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: feature-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy to feature stack in the testing account
        shell: bash
        env:
          FEATURE_BRANCH_NAME: ${{ github.ref }}
        run: |
          echo ${GITHUB_REF##*/} | tr -cd '[a-zA-Z0-9-]'
          echo ${FEATURE_BRANCH_NAME##*/} | tr -cd '[a-zA-Z0-9-]'
          sam deploy --stack-name $(echo ${GITHUB_REF##*/} | tr -cd '[a-zA-Z0-9-]') \
            --capabilities CAPABILITY_IAM \
            --region ${TESTING_REGION} \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE}

  build-and-package-develop:
    if: github.ref == 'refs/heads/develop'
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Go binary
        run: |
          GOOS=linux GOARCH=amd64 go build -o bootstrap main.go
      - uses: aws-actions/setup-sam@v2

      - name: Build resources
        run: sam build --template ${SAM_TEMPLATE} --use-container

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Upload artifacts to testing artifact buckets
        run: |
          sam package \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --region ${TESTING_REGION} \
            --output-template-file packaged-testing.yaml

      - uses: actions/upload-artifact@v3
        with:
          name: packaged-testing.yaml
          path: packaged-testing.yaml

  deploy-develop:
    if: github.ref == 'refs/heads/develop'
    needs: [ build-and-package-develop ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
      - uses: actions/download-artifact@v3
        with:
          name: packaged-testing.yaml

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy to testing account
        run: |
          sam deploy --stack-name ${TESTING_STACK_NAME} \
            --template packaged-testing.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${TESTING_REGION} \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE}

  integration-test:
    if: github.ref == 'refs/heads/develop'
    needs: [ deploy-develop ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # trigger the integration tests here

  build-and-package-prd:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Go binary
        run: |
          GOOS=linux GOARCH=amd64 go build -o bootstrap main.go
      - uses: aws-actions/setup-sam@v2

